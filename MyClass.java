 

public class MyClass {

    public static final String MyHash =
        "";

}